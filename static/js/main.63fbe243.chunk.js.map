{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","styles","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","random","Date","handleNewExpense","handleFormShowing","type","min","step","onClick","NewExpense","shownStatus","setShownStatus","toggleFormOpening","prevStatus","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63fbe243.chunk.js","sourcesContent":["import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString(\"en-US\", {\r\n        month: \"long\",\r\n    });\r\n    const day = props.date.toLocaleString('en-US', {\r\n      day: '2-digit'\r\n    });\r\n    const year = props.date.getFullYear();\r\n    \r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const styles = 'card ' + props.className;\r\n    return <div className={styles}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from './ExpenseDate'\r\nimport Card from '../UI/Card'\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}/>\r\n        <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        \r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nfunction ExpensesList(props) {\r\n  \r\n    if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const handleSelectChange = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n        <div className=\"expenses-filter__control\">\r\n            <label>Filter by year</label>\r\n            <select value={props.selected} onChange={handleSelectChange}>\r\n            <option value=\"2022\">2022</option>\r\n            <option value=\"2021\">2021</option>\r\n            <option value=\"2020\">2020</option>\r\n            <option value=\"2019\">2019</option>\r\n            </select>\r\n        </div>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{'height': barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n  const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValue);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nfunction ExpensesChart(props) {\r\n    const chartDataPoints = [\r\n        {\r\n            label: 'Jan',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Feb',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Mar',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Apr',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'May',\r\n            value: 0\r\n        },\r\n        {\r\n\r\n            label: 'Jun',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Jul',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Aug',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Sep',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Oct',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Nov',\r\n            value: 0\r\n        },\r\n        {\r\n            label: 'Dec',\r\n            value: 0\r\n        },\r\n    ];\r\n\r\n    for (let expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n  \r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import './ExpenseForm.css';\r\nimport { useState } from 'react';\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState(''); \r\n    const handleTitleChange = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const handleAmountChange = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    const handleDateChange = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            id: Math.random() * 10,\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        props.handleNewExpense(expenseData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n        \r\n        props.handleFormShowing();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleFormSubmit}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new_expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={handleTitleChange}/>\r\n                </div>\r\n                <div className=\"new_expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={handleAmountChange} />\r\n                </div>\r\n                <div className=\"new_expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={handleDateChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button onClick={props.handleFormShowing} type=\"button\">Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\nimport {useState} from 'react';\r\n\r\nfunction NewExpense(props) {\r\n    const [shownStatus, setShownStatus] = useState(true);\r\n    \r\n    const toggleFormOpening = () => {\r\n        setShownStatus(prevStatus => {\r\n            return !prevStatus;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {shownStatus ? <button onClick={toggleFormOpening} className=\"new-expense__button\">Add new Expense</button> : <ExpenseForm handleFormShowing={toggleFormOpening} handleNewExpense={props.handleNewExpense}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport {useState} from 'react';\nimport './App.css';\n\nconst INITIAL_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  }\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n  \n  const handleNewExpense = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <h1>Expenses List</h1>\n      <NewExpense handleNewExpense={handleNewExpense}/>\n      <Expenses items={expenses} />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}